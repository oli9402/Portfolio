{
  "hash": "0a2c6f7956e8f996b6a68ecd21f2f5ce",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Themes for Data Visualization with R\"\nauthor: \"Oliver Zingg\"\ndate: \"09.10.2023\"\nimage: \"pic.png\"\n---\n\n\n# Example 1: Save Themes\n\n* https://datavizs23.classes.andrewheiss.com/example/05-example.html\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)  # For ggplot, dplyr, and friends\nlibrary(gapminder)  # For gapminder data\nlibrary(scales)     # For nice axis labels\n\ngapminder_filtered <- gapminder %>% \n  filter(year > 2000)\n\nbase_plot <- ggplot(data = gapminder_filtered,\n                    mapping = aes(x = gdpPercap, y = lifeExp, \n                                  color = continent, size = pop)) +\n  geom_point() +\n  # Use dollars, and get rid of the cents part (i.e. $300 instead of $300.00)\n  scale_x_log10(labels = dollar_format(accuracy = 1)) +\n  # Format with commas\n  scale_size_continuous(labels = comma) +\n  # Use viridis\n  scale_color_viridis_d(option = \"plasma\", end = 0.9) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\",\n       color = \"Continent\", size = \"Population\",\n       title = \"Here's a cool title\",\n       subtitle = \"And here's a neat subtitle\",\n       caption = \"Source: The Gapminder Project\") +\n  facet_wrap(vars(year))\n```\n:::\n\n\n## Create and save theme (my_pretty_theme)\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_pretty_theme <- theme_minimal(base_family = \"Roboto Condensed\", base_size = 12) +\n  theme(panel.grid.minor = element_blank(),\n        # Bold, bigger title\n        plot.title = element_text(face = \"bold\", size = rel(1.7)),\n        # Plain, slightly bigger subtitle that is grey\n        plot.subtitle = element_text(face = \"plain\", size = rel(1.3), color = \"grey70\"),\n        # Italic, smaller, grey caption that is left-aligned\n        plot.caption = element_text(face = \"italic\", size = rel(0.7), \n                                    color = \"grey70\", hjust = 0),\n        # Bold legend titles\n        legend.title = element_text(face = \"bold\"),\n        # Bold, slightly larger facet titles that are left-aligned for the sake of repetition\n        strip.text = element_text(face = \"bold\", size = rel(1.1), hjust = 0),\n        # Bold axis titles\n        axis.title = element_text(face = \"bold\"),\n        # Add some space above the x-axis title and make it left-aligned\n        axis.title.x = element_text(margin = margin(t = 10), hjust = 0),\n        # Add some space to the right of the y-axis title and make it top-aligned\n        axis.title.y = element_text(margin = margin(r = 10), hjust = 1),\n        # Add a light grey background to the facet titles, with no borders\n        strip.background = element_rect(fill = \"grey90\", color = NA),\n        # Add a thin grey border around all the plots to tie in the facet titles\n        panel.border = element_rect(color = \"grey90\", fill = NA))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_plot + \n  my_pretty_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n## Lets make this plot even better :D \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gapminder)\nlibrary(scales)\nlibrary(ggtext)\nlibrary(thematic)\n\ngapminder_filtered <- gapminder %>% \n  filter(year > 2000)\n\ncolors <- thematic::okabe_ito(5)\ntitle_text <- glue::glue(\n  ' Life Expectancy per GDP for <span style = \"color:{colors[1]}\">**Africa**</span>, <span style = \"color:{colors[2]}\">**America**</span>, <span style = \"color:{colors[3]}\">**Asia**</span>, <br> <span style = \"color:{colors[4]}\">**Europa**</span> and <span style = \"color:{colors[5]}\">**Oceania**</span>'\n)\n\nplot_nice <- ggplot(data = gapminder_filtered,\n                    mapping = aes(x = gdpPercap, y = lifeExp, \n                                  color = continent, size = pop)) +\n  geom_point() + \n  # Use dollars, and get rid of the cents part (i.e. $300 instead of $300.00)\n  #log10 scale = abstände nicht gleich(nicht-linear): x-1*x = x+1\n  scale_x_log10(labels = dollar_format(accuracy = 1)) +\n  # Format with commas (anstatt wissenschaftliche Notation für Population)\n  scale_size_continuous(labels = comma) +\n  # Use viridis color\n  scale_color_viridis_d(option = \"plasma\", end = 0.9) +\n  labs(x = \"GDP per capita\", y = \"Life expectancy\",\n       color = \"Continent\", size = \"Population\",\n       title = title_text,\n       subtitle = \"Visible Correlation between GDP (per capita) and Life expecanty\",\n       caption = \"Source: The Gapminder Project\") +\n  facet_wrap(vars(year))+\n\n  theme_minimal(base_family = 'Source Sans Pro', base_size = 12) + \n  #guide = none, legend wird ausgelassen\n  scale_color_manual(values = thematic::okabe_ito(5), guide = \"none\")+\n  #grauere Hintergrund verschwindet+\n  theme(panel.grid.minor = element_blank(),\n  # Plain, slightly bigger subtitle that is grey\n  plot.subtitle = element_text(face = \"plain\", size = rel(1.3), color = \"grey70\"),\n  # Italic, smaller, grey caption that is left-aligned\n  plot.caption = element_text(face = \"italic\", size = rel(0.7), \n                              color = \"grey70\", hjust = 0),\n  #Bold legend titles\n  legend.title = element_text(face = \"bold\"),\n  # Bold, slightly larger facet titles that are left-aligned for the sake of repetition\n  strip.text = element_text(face = \"bold\", size = rel(1.1), hjust = 0, color = \"white\"),\n  plot.title = ggtext::element_markdown(\n    color = 'grey20', family = 'Merriweather', size = rel(1.7),face = \"bold\"\n  ),\n  plot.title.position = \"plot\",\n  # Bold axis titles\n  axis.title = element_text(face = \"bold\"),\n  # Add some space above the x-axis title and make it left-aligned\n  axis.title.x = element_text(margin = margin(t = 10), hjust = 0),\n  # Add some space to the right of the y-axis title and make it top-aligned\n  axis.title.y = element_text(margin = margin(r = 10), hjust = 1, margin (0,4,0,0)),\n  # Add a light grey background to the facet titles, with no borders\n  strip.background = element_rect(fill = \"grey20\", color = NA),\n  # Add a thin grey border around all the plots to tie in the facet titles\n  panel.border = element_rect(color = \"grey20\", fill = NA),\n  legend.position = \"top\",\n  legend.justification = 1)\n\nplot_nice\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n## We can add some annotations\n\nAnnotionations can be great to highlight information that gets lost otherwise. For example we see that South Africa increases its GDP per capita from 2002 to 2007 but life expectancy decreases by 4 years.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#find african country with dip in lifeexp: South Africa(2002: x = 7711 ,y= 53.4; 2007: x = 9270, y = 49.3)\ngapminder_filtered |> \n  filter(continent == \"Africa\" & between(gdpPercap,3000,10000) & between(lifeExp,48,55)) |> arrange(desc(pop))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  country           continent  year lifeExp      pop gdpPercap\n  <fct>             <fct>     <int>   <dbl>    <int>     <dbl>\n1 South Africa      Africa     2002    53.4 44433622     7711.\n2 South Africa      Africa     2007    49.3 43997828     9270.\n3 Congo, Rep.       Africa     2002    53.0  3328795     3484.\n4 Namibia           Africa     2007    52.9  2055080     4811.\n5 Namibia           Africa     2002    51.5  1972153     4072.\n6 Equatorial Guinea Africa     2002    49.3   495627     7703.\n```\n\n\n:::\n\n```{.r .cell-code}\n# creat df for different arrow coordinations\ndf_2002 <-  gapminder_filtered %>%\n  filter(year == 2002) %>% \n  mutate(\n    start_x = 12000,\n    end_x = 9000,\n    start_y = 55,\n    end_y = 53.4\n  )\n\n# creat df for different arrow coordinations\ndf_2007 <-  gapminder_filtered %>%\n  filter(year == 2007) %>% \n  mutate(\n    start_x = 12000,\n    end_x = 10000,\n    start_y = 55,\n    end_y = 49.3\n  )\n\n\n\nplot_nice_anno <- plot_nice + geom_label(aes(x = 12000, y = 55, label = \"South Africa\"), \n                  hjust = 0, \n                  vjust = 0.5, \n                  lineheight = 0.8,\n                  colour = colors[1], \n                  fill = \"white\", \n                  label.size = NA, \n                  size = 5)   +\n  geom_curve(data = df_2002, aes(x = start_x, y = start_y, xend = end_x, yend = end_y), \n             colour = \"grey20\", \n             size=0.8, \n             curvature = -0.2,\n             arrow = arrow(length = unit(0.03, \"npc\"))) + \n  geom_curve(data = df_2007, aes(x = start_x, y = start_y, xend = end_x, yend = end_y), \n             colour = \"grey20\", \n             size=0.8, \n             curvature = -0.2,\n             arrow = arrow(length = unit(0.03, \"npc\")))\nplot_nice_anno\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Lets keep playing around\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_nice_anno +\n  scale_y_continuous(\n    breaks = c(4:7*10, seq(70, 80, by = 2))\n    ) + coord_cartesian(clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n# Example 2: BBC News data team style \n\n* https://bbc.github.io/rcookbook/\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#This line of code installs the pacman page if you do not have it installed - if you do, it simply loads the package\nif(!require(pacman))install.packages(\"pacman\")\n\npacman::p_load('dplyr', 'tidyr', 'gapminder',\n               'ggplot2',  'ggalt',\n               'forcats', 'R.utils', 'png', \n               'grid', 'ggpubr', 'scales',\n               'bbplot')\n#install.packages('devtools')\n#devtools::install_github('bbc/bbplot')\nlibrary(bbplot)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Prepare data\nmultiple_line_df <- gapminder %>%\n  filter(country == \"China\" | country == \"United States\") \n\n#Make plot\nmultiple_line <- ggplot(multiple_line_df, aes(x = year, y = lifeExp, colour = country)) +\n  geom_line(size = 2) +\n  geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +\n  scale_colour_manual(values = c(\"#FAAB18\", \"#1380A1\")) +\n  bbc_style() +\n  labs(title=\"Living longer\",\n       subtitle = \"Life expectancy in China and the US\")\nmultiple_line\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n## Add annotation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line <- multiple_line + \n  geom_label(aes(x = 1980, y = 45, label = \"I'm quite a long\\nannotation over\\nthree rows\"), \n             hjust = 0, \n             vjust = 0.5, \n             lineheight = 0.8,\n             colour = \"#555555\", \n             fill = \"white\", \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6) \nmultiple_line\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n## Add legend to lines\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line <- multiple_line + \n  theme(legend.position = \"none\") + \n  xlim(c(1950, 2011)) +\n  geom_label(aes(x = 2007, y = 79, label = \"US\"), \n             hjust = 0, \n             vjust = 0.5, \n             colour = \"#1380A1\", \n             fill = \"white\", \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6) +\n  geom_label(aes(x = 2007, y = 72, label = \"China\"), \n             hjust = 0, \n             vjust = 0.5, \n             colour = \"#FAAB18\", \n             fill = \"white\", \n             label.size = NA, \n             family=\"Helvetica\", \n             size = 6)\nmultiple_line\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n## Add arrow to address dip in china\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultiple_line + geom_curve(aes(x = 1979, y = 45, xend = 1965, yend = 43), \n                             colour = \"#555555\", \n                             size=0.5, \n                             curvature = -0.2,\n                             arrow = arrow(length = unit(0.03, \"npc\")))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Dumbbell plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggalt\")\nlibrary(\"tidyr\")\n\n#Prepare data\ndumbbell_df <- gapminder %>%\n  filter(year == 1967 | year == 2007) %>%\n  select(country, year, lifeExp) %>%\n  spread(year, lifeExp) %>%\n  mutate(gap = `2007` - `1967`) %>%\n  arrange(desc(gap)) %>%\n  head(10)\n\n#Make plot\nggplot(dumbbell_df, aes(x = `1967`, xend = `2007`, y = reorder(country, gap), group = country)) + \n  geom_dumbbell(colour = \"#dddddd\",\n                size = 3,\n                colour_x = \"#FAAB18\",\n                colour_xend = \"#1380A1\") +\n  bbc_style() + \n  labs(title=\"We're living longer\",\n       subtitle=\"Biggest life expectancy rise, 1967-2007\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n# Example 3: Youtube\n\n- https://www.youtube.com/watch?v=nDa6aHxiSYQ&list=LL&index=2&ab_channel=AlbertRapp\n\n<details>\n<summary>Text that appears when folded</summary>\nContents that appear when unfolded.\nCan contain many lines, as well as code chunks.\n</details>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gghighlight)\nlibrary(thematic)\nlibrary(ggtext)\ndf <- read.csv(\"time.csv\")\ndf_c <- df |> select(Year,alone = contains(\"alone\"),coworkers = contains(\"coworker\"), parents = contains(\"parents\"), children = contains(\"children\"), friends = contains(\"friends\")) %>% pivot_longer(\n    cols = alone:friends, \n    names_to = 'person',\n    values_to = 'minutes'\n)\ncolors <- thematic::okabe_ito(2)\ntitle_text <- glue::glue(\n  'Around the age of 40, we spend less time with <span style = \"color:{colors[2]}\">**children**</span><br>and more time <span style = \"color:{colors[1]}\">**alone**</span>'\n)\n# plot\ndf_c |> \n  ggplot(aes(x = Year, y = minutes, color = person)) +\n  geom_line(linewidth = 1.5) +\n  labs(title = 'Time with others as we get older') + \n  theme_minimal(\n    base_size = 24,\n    base_family = 'Source Sans Pro'\n  ) + labs(\n    x = 'Age',\n    y = element_blank(),\n    title = title_text,\n    subtitle = 'Daily time spent with others (in minutes)',\n    caption = 'Data: Our World in Data'\n  ) +\n  gghighlight(\n    person %in% c('alone', 'children'), \n    Year >= 38, \n    use_direct_label = F,\n    use_group_by = FALSE,\n    unhighlighted_params = list(color = 'grey80', linewidth = 1)\n  ) +\n  annotate(\n    'text',\n    x = 80,\n    y = c(425, 85),\n    size = 8,\n    label = c('alone', 'children'),\n    family = 'Source Sans Pro',\n    fontface = 'bold',\n    hjust = 1,\n    color = thematic::okabe_ito(2)\n  ) +\n  annotate(\n    'segment',\n    x = 38,\n    xend = 38,\n    y = 0,\n    yend = 275,\n    linetype = 2,\n    linewidth = 1,\n    color = 'grey10'\n  ) +\n  scale_color_manual(values = thematic::okabe_ito(2)) +\n  theme(\n    legend.position = 'none',\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(linewidth = 0.5, linetype = 2, color = 'grey85'),\n    plot.title.position = 'plot',\n    text = element_text(color = 'grey20'),\n    axis.text = element_text(color = 'grey40'),\n    plot.title = ggtext::element_markdown(\n      color = 'grey20', family = 'Merriweather'\n    ),\n    plot.subtitle = element_text(\n      color = 'grey30', \n      size = rel(0.8), \n      margin = margin(b = 8, unit = 'mm')\n    ),\n    plot.caption = element_text(size = rel(0.6), color = 'grey20')\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/setup-1.png){width=960}\n:::\n:::\n\n\n# Example 4\n\nlets make a global theme than can be applied to all plots in a script \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(palmerpenguins) #data\nlibrary(scico)\n\ntheme_set(theme_minimal(base_size=12, base_family = \"Open Sans\"))\n\ndf <- data.frame(palmerpenguins::penguins)\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n1  Adelie Torgersen           39.1          18.7               181        3750\n2  Adelie Torgersen           39.5          17.4               186        3800\n3  Adelie Torgersen           40.3          18.0               195        3250\n4  Adelie Torgersen             NA            NA                NA          NA\n5  Adelie Torgersen           36.7          19.3               193        3450\n6  Adelie Torgersen           39.3          20.6               190        3650\n     sex year\n1   male 2007\n2 female 2007\n3 female 2007\n4   <NA> 2007\n5 female 2007\n6   male 2007\n```\n\n\n:::\n\n```{.r .cell-code}\nt <- ggplot(df,aes(bill_length_mm,bill_depth_mm))+\n  geom_point(aes(color = flipper_length_mm), alpha = .6,size = 3.5) + \n  scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n  scale_y_continuous(breaks= seq(10,25,by = 5),limits= c(10,25))+\n  scale_x_continuous(limits = c(30,60))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Theme Anpassungen global\ntheme_update(\n  axis.ticks = element_line(color= \"grey92\"),\n  axis.ticks.length = unit(.5, \"lines\"),\n  panel.grid.minor = element_blank(),\n  legend.title = element_text(size = 12),\n  legend.text = element_text(color = \"grey30\"),\n  plot.title = element_text(size = 16, face = \"bold\"),\n  plot.title.position = 'plot',\n  plot.caption.position = \"plot\",\n  plot.subtitle = element_text(size = 12, color = \"grey30\"),\n  plot.caption = element_text(size = 9, margin = margin(t = 15))\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt + \n  labs(\n    title = \"Some title\",\n    subtitle = \"Some subtitle\",\n    caption = \"Data = **{Palmer}**\",\n    x = \"Bill Lenght\",\n    y = \"Bill depth\",\n    color = \"*Flipper Length*\") + \n  theme(\n    plot.caption = element_markdown(),\n    legend.title= element_markdown(),\n    #panel.background = element_rect(fill = \"black\")\n  ) + coord_cartesian(clip = \"off\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"test.pdf\", width = 9, height = 8, device = cairo_pdf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggtext)\nlibrary(ggforce)\nlibrary(rcartocolor)\ntheme_update(\n  plot.title = ggtext::element_markdown(),\n  plot.caption = ggtext::element_markdown(),\n  axis.title.x = ggtext::element_markdown(),\n  axis.title.y = ggtext::element_markdown()\n)\ngf <- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  scico::scale_color_scico(palette = \"bamako\", direction = -1) +\n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25)) +\n  rcartocolor::scale_fill_carto_d(palette = \"Bold\") +\n  labs(\n    title = \"Bill Dimensions of Brush-Tailed Penguins (*Pygoscelis*)\",\n    subtitle = 'A scatter plot of bill depth versus bill length.',\n    caption = \"Data: Gorman, Williams & Fraser (2014) *PLoS ONE*\",\n    x = \"**Bill Length** (mm)\", \n    y = \"**Bill Depth** (mm)\",\n    color = \"Body mass (g)\",\n    fill = \"Species\"\n  )\n \n## ellipsoids for all groups\n(gf +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, label = species), \n    alpha = .15, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5)\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=960}\n:::\n\n```{.r .cell-code}\n(gf +\n  ggforce::geom_mark_ellipse(\n    aes(fill = species, label = species, filter = species == 'Gentoo'), \n    alpha = 0, show.legend = FALSE\n  ) +\n  geom_point(aes(color = body_mass_g), alpha = .6, size = 3.5) +\n  coord_cartesian(xlim = c(25, 65), ylim = c(10, 25), expand = F, clip = \"off\")\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-2.png){width=960}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}